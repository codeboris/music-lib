basePath: /api
definitions:
  handlers.createSongResponse:
    properties:
      id:
        type: integer
    type: object
  handlers.errorResponse:
    properties:
      message:
        type: string
    type: object
  handlers.getListVerses:
    properties:
      data:
        items:
          type: string
        type: array
    type: object
  handlers.getListsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Song'
        type: array
    type: object
  handlers.statusResponse:
    properties:
      status:
        type: string
    type: object
  models.InputSong:
    properties:
      group:
        type: string
      song:
        type: string
    required:
    - group
    - song
    type: object
  models.InputUpdateSong:
    properties:
      group:
        type: string
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
  models.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      link:
        type: string
      release_date:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for Music Lib Application
  title: Music Lib App API
  version: "1.0"
paths:
  /songs:
    get:
      consumes:
      - application/json
      description: Возвращает список песен с возможностью фильтрации по всем полям.
      parameters:
      - description: Группа или исполнитель песни
        in: query
        name: group
        type: string
      - description: Название песни
        in: query
        name: song
        type: string
      - description: Дата выхода песни (в формате DD-MM-YYYY)
        in: query
        name: release_date
        type: string
      - description: Фрагмент текста песни
        in: query
        name: text
        type: string
      - description: Ссылка на песню
        in: query
        name: link
        type: string
      - description: Номер страницы (по умолчанию 1)
        in: query
        name: page
        type: integer
      - description: Количество записей на странице (по умолчанию 10)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список песен
          schema:
            $ref: '#/definitions/handlers.getListsResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Получить список песен
      tags:
      - Песни
    post:
      consumes:
      - application/json
      description: Создает новую песню, заполняя необходимые поля из внешнего API
        по группе и названию песни.
      parameters:
      - description: Данные для создания песни
        in: body
        name: inputSong
        required: true
        schema:
          $ref: '#/definitions/models.InputSong'
      produces:
      - application/json
      responses:
        "200":
          description: ID созданной песни
          schema:
            $ref: '#/definitions/handlers.createSongResponse'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Создать новую песню
      tags:
      - Песни
  /songs/{id}:
    delete:
      consumes:
      - application/json
      description: Удаляет песню по заданному ID. Требуется передать ID песни в URL.
      parameters:
      - description: ID песни для удаления
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Статус удаления
          schema:
            $ref: '#/definitions/handlers.statusResponse'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Удалить песню по ID
      tags:
      - Песни
    put:
      consumes:
      - application/json
      description: Обновляет данные о песне по ID. Требуется передать данные для обновления
        в формате JSON.
      parameters:
      - description: ID песни для обновления
        in: path
        name: id
        required: true
        type: integer
      - description: Данные для обновления песни
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.InputUpdateSong'
      produces:
      - application/json
      responses:
        "200":
          description: Статус обновления
          schema:
            $ref: '#/definitions/handlers.statusResponse'
        "400":
          description: Неверный запрос
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Обновить информацию о песне
      tags:
      - Песни
  /songs/{id}/lyrics:
    get:
      consumes:
      - application/json
      description: Данный метод извлекает текст песни по ID, делит его на куплеты
        и возвращает их постранично.
      parameters:
      - description: ID песни
        in: path
        name: id
        required: true
        type: integer
      - description: Номер страницы для пагинации (по умолчанию 1)
        in: query
        name: page
        type: integer
      - description: Количество куплетов на странице (по умолчанию 2)
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список куплетов
          schema:
            $ref: '#/definitions/handlers.getListVerses'
        "400":
          description: Неверные параметры запроса
          schema:
            $ref: '#/definitions/handlers.errorResponse'
        "500":
          description: Ошибка сервера
          schema:
            $ref: '#/definitions/handlers.errorResponse'
      summary: Получить текст песни с разбивкой на куплеты
      tags:
      - Песни
swagger: "2.0"
